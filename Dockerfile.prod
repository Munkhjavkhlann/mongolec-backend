# Multi-stage build for production
FROM oven/bun:1 AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY bun.lockb* ./

# Install dependencies
RUN bun install --frozen-lockfile

# Copy source code
COPY . .

# Generate Prisma Client
RUN bunx prisma generate

# Build TypeScript
RUN bun run build || echo "No build script, using source"

# Production stage
FROM oven/bun:1-slim

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY bun.lockb* ./

# Install production dependencies only
RUN bun install --production --frozen-lockfile

# Copy built app from builder
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma

# Copy source if no build directory
COPY --from=builder /app/src ./src

# Expose port
EXPOSE 4000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s \
  CMD bun run -e "fetch('http://localhost:4000/health').then(r => r.ok ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))"

# Run migrations and start
CMD ["sh", "-c", "bunx prisma migrate deploy && bun run src/index.ts"]
